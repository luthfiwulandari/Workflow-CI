name: MLflow CI Advanced Workflow

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to the main branch
      # Add other branches if needed

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    - name: set up job # Step from criteria
      run: echo "Setting up the job..." # Placeholder command

    - name: Checkout code # Step from criteria (actions/checkout@v3)
      uses: actions/checkout@v3

    - name: Set up Python 3.12.7 # Step from criteria
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.7' # Specify the exact version

    - name: Check environment # Step from criteria
      run: |
        python --version
        pip --version
        # Add other checks if needed
        echo "Current directory after checkout:"
        pwd
        echo "Contents of repository root:"
        ls -al

    - name: Install dependencies # Step from criteria (using conda.yaml)
      run: |
        echo "Installing Miniconda..."
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"

        # Initialize Conda and source the activation script
        conda init bash
        source $HOME/miniconda/etc/profile.d/conda.sh # Source Conda's own activation script

        echo "Navigating to MLProject directory and creating environment..."
        # Print current directory and list files for debugging
        echo "Current directory before CD:"
        pwd
        echo "Contents of repository root:"
        ls -al # List contents of repository root

        # Change directory to the MLProject folder (assuming it's at the root)
        cd MLProject/

        # Print current directory and list files in MLProject for debugging
        echo "Current directory after CD:"
        pwd
        echo "Contents of MLProject folder:"
        ls -al

        echo "Creating conda environment from conda.yaml..."
        # Create the conda environment using the local conda.yaml
        conda env create -f conda.yaml
        conda activate heart-disease-env # Activate the environment - should work now after sourcing

        echo "Conda environment creation attempt finished."
        echo "Conda environments list:"
        conda env list

    - name: Run MLflow Project
      run: |
        # Gunakan conda-run untuk menjalankan perintah di environment
        conda-run heart-disease-env bash -c 'cd Workflow-CI/MLProject && mlflow run . -e main -P data_path=heart_clean.csv --no-conda'
        # Catatan: Saya tambahkan `cd Workflow-CI/MLProject` di dalam bash -c karena mlflow run . dijalankan dari root repo
        # dan -P data_path=heart_clean.csv --no-conda sesuai dengan kebutuhan project kita


    - name: Get latest MLflow run_id # Step from criteria (Placeholder)
      run: |
        echo "Placeholder for getting run ID."


    - name: Install Python dependencies (for upload/docker)
      run: |
        conda-run heart-disease-env pip install joblib # Ganti pip install joblib dengan dependencies lain jika ada


    - name: Build Docker Image
      run: |
        conda-run heart-disease-env mlflow build-docker Workflow-CI/MLProject --model-uri "runs:/RandomForest_Autolog_Project/model" --image "heart-disease-prediction/randomforest_autolog_project"


    - name: Log in to Docker Hub # Step from criteria (requires Docker Hub credentials as GitHub Secrets)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} # Set as GitHub Secret
        password: ${{ secrets.DOCKERHUB_TOKEN }}   # Set as GitHub Secret

    - name: Tag Docker Image
      run: |
        # Tag image yang dibangun oleh mlflow build-docker
        # Nama image default dari mlflow build-docker adalah nama project/nama run (misalnya: heart-disease-prediction/randomforest_autolog_project)
        # Kita tag ulang dengan format Docker Hub: <YOUR_DOCKERHUB_USERNAME>/<YOUR_IMAGE_NAME>
        # Sesuaikan nama image awal (heart-disease-prediction/randomforest_autolog_project) jika berbeda di log Anda
        docker tag heart-disease-prediction/randomforest_autolog_project lthfiwlndri/heart-disease-model:latest

    - name: Push Docker Image
      run: |
        docker push lthfiwlndri/heart-disease-model:latest

    - name: Post Log in to Docker Hub # Step from criteria (Handled by uses action)
      run: echo "Post Login handled by action" # Placeholder

    - name: Post Set up Python 3.12.7 # Step from criteria (Handled by uses action)
      run: echo "Post Python setup handled by action" # Placeholder

    - name: Post Checkout code # Step from criteria (Handled by uses action)
      run: echo "Post Checkout handled by action" # Placeholder

    - name: Complete job # Step from criteria
      run: echo "Job completed successfully."
